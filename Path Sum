-----------------------------------------------------// Path Sum //-----------------------------------------------------------------------

Problem statement
You are given the root node of a binary tree consisting of ‘N’ nodes and an integer value ‘TARGET’. Your task is to find the number of leaf nodes in the given binary tree such that the sum of all nodes from the root to leaf is equal to ‘TARGET’.

A leaf node is defined as a node having no child nodes.

You are given a root node ‘ROOT’.Your task is to return the number of leaf nodes satisfying the given condition.

Example:
Elements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.

For example, the input for the tree depicted in the below image would be :

1
2 3
4 -1 5 6
-1 7 -1 -1 -1 -1
-1 -1

Explanation : 
Level 1 :
The root node of the tree is 1

Level 2 :
Left child of 1 = 2
Right child of 1 = 3

Level 3 :
Left child of 2 = 4
Right child of 2 = null (-1)
Left child of 3 = 5
Right child of 3 = 6

Level 4 :
Left child of 4 = null (-1)
Right child of 4 = 7
Left child of 5 = null (-1)
Right child of 5 = null (-1)
Left child of 6 = null (-1)
Right child of 6 = null (-1)

Level 5 :
Left child of 7 = null (-1)
Right child of 7 = null (-1)

The first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. 

The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.

The input ends when all nodes at the last level are null (-1).
Note :
The above format was just to provide clarity on how the input is formed for a given tree. 

The sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:

1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
1 <= T <= 10
1 <= N <= 10^6
1 <= nodeVal <=10^9

Time limit: 1 sec
Sample Input 1:
2
3 1 9 -1 -1 6 10 -1 -1 -1 -1
4
2 1 4 -1 -1 3 -1 -1 -1
11
Sample Output 1:
1
0
Explanation of sample input 1:
For the first test case,

Here, only one path from the root to leaf node [3,1] sum is equal to  ‘TARGET’.Hence, the answer is 1. 

For the second test case, 

There is no path from the root to leaf having the sum equal to ‘TARGET’.Hence,  the answer is 0.
Sample Input 2:
2
3 -1 4 -1 10 -1 -1 
17
4 -1 5 5 -1 2 -1 3 -1 -1 -9 -1 -1 
10
Sample Output 2:
1
1

-----------------------------------------------------------------// Solution //---------------------------------------------------------------------

#include <bits/stdc++.h> 
/*************************************************

    class TreeNode 
        {
           public:
            int val;
            TreeNode* left;
            TreeNode* right;

            TreeNode(int val) 
            {
                this->val = val;
                left = NULL;
                right = NULL;
            }
        };
        
*************************************************/
int Sum(TreeNode* root,int target,int sum){
    if(root==NULL){
        return 0;
    }
    sum+=root->val;
    int count=0;
    if(root->left==NULL&&root->right==NULL){
        if(sum==target){
             count++;
        }else{
            return count;
        }
    }else{
        count+=Sum(root->left,target,sum);
        count+=Sum(root->right,target,sum);    
    }
    return count;
}
int pathSum(TreeNode* root, int target)
{
    return Sum(root,target,0);
}
